// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RevisionBlazer.Models.EntityFramework;

#nullable disable

namespace RevisionBlazer.Migrations
{
    [DbContext(typeof(ClassDBContext))]
    partial class ClassDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Assesment", b =>
                {
                    b.Property<int>("IdAssessment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("assessmentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAssessment"));

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("duedate");

                    b.Property<int>("IdCourse")
                        .HasColumnType("integer")
                        .HasColumnName("idcourse");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("TotalMarks")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("totalmarks");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("IdAssessment");

                    b.HasIndex("IdCourse");

                    b.ToTable("Assesments");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Course", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcourse");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCourse"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startdate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("IdCourse");

                    b.ToTable("t_e_course");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Enrollment", b =>
                {
                    b.Property<int>("IdEnrollment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("enrollmentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEnrollment"));

                    b.Property<double?>("FinalGrade")
                        .HasColumnType("double precision")
                        .HasColumnName("finalgrade");

                    b.Property<int>("IdCourse")
                        .HasColumnType("integer")
                        .HasColumnName("idcourse");

                    b.Property<int>("IdStudent")
                        .HasColumnType("integer")
                        .HasColumnName("idstudent");

                    b.Property<double?>("Progress")
                        .HasColumnType("double precision")
                        .HasColumnName("progress");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("IdEnrollment");

                    b.HasIndex("IdCourse");

                    b.HasIndex("IdStudent");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Grade", b =>
                {
                    b.Property<int>("IdGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idgrade");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGrade"));

                    b.Property<string>("FeedBack")
                        .HasColumnType("text")
                        .HasColumnName("feedback");

                    b.Property<string>("IdAssessment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("assessmentid");

                    b.Property<int>("IdEnrollment")
                        .HasColumnType("integer")
                        .HasColumnName("enrollmentid");

                    b.Property<string>("Score")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("score");

                    b.HasKey("IdGrade");

                    b.HasIndex("IdEnrollment");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Instructor", b =>
                {
                    b.Property<int>("IdInstructor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idinstructor");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdInstructor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Expertise")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expertise");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.HasKey("IdInstructor");

                    b.ToTable("t_e_instructor");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.JoinCourseInstructor", b =>
                {
                    b.Property<int>("IdCourse")
                        .HasColumnType("integer")
                        .HasColumnName("idcourse");

                    b.Property<int>("IdInstructor")
                        .HasColumnType("integer")
                        .HasColumnName("idinstructor");

                    b.HasKey("IdCourse", "IdInstructor");

                    b.HasIndex("IdInstructor");

                    b.ToTable("joincourseinstructor");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Module", b =>
                {
                    b.Property<int>("IdModule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmodule");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdModule"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Content");

                    b.Property<int>("Duration")
                        .HasColumnType("integer")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("enddate");

                    b.Property<int>("IdCourse")
                        .HasColumnType("integer")
                        .HasColumnName("idcourse");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startdate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("IdModule");

                    b.HasIndex("IdCourse");

                    b.ToTable("t_e_module");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idstudent");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdStudent"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateofbirth");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("EnrollmentDate")
                        .HasColumnType("text")
                        .HasColumnName("enrollmentdate");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phonenumber");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("IdStudent");

                    b.ToTable("t_e_student");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Assesment", b =>
                {
                    b.HasOne("RevisionBlazer.Models.EntityFramework.Course", "IdCourseNavigation")
                        .WithMany("Assesments")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Enrollment", b =>
                {
                    b.HasOne("RevisionBlazer.Models.EntityFramework.Course", "IdCourseNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevisionBlazer.Models.EntityFramework.Student", "IdStudentNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");

                    b.Navigation("IdStudentNavigation");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Grade", b =>
                {
                    b.HasOne("RevisionBlazer.Models.EntityFramework.Enrollment", "IdEnrollmentNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("IdEnrollment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEnrollmentNavigation");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.JoinCourseInstructor", b =>
                {
                    b.HasOne("RevisionBlazer.Models.EntityFramework.Course", "IdCourseNavigation")
                        .WithMany("CourseInstructor")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RevisionBlazer.Models.EntityFramework.Instructor", "IdInstructorNavigation")
                        .WithMany("CourseInstrutor")
                        .HasForeignKey("IdInstructor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");

                    b.Navigation("IdInstructorNavigation");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Module", b =>
                {
                    b.HasOne("RevisionBlazer.Models.EntityFramework.Course", "IdCourseNavigation")
                        .WithMany("Modules")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCourseNavigation");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Course", b =>
                {
                    b.Navigation("Assesments");

                    b.Navigation("CourseInstructor");

                    b.Navigation("Enrollments");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Enrollment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Instructor", b =>
                {
                    b.Navigation("CourseInstrutor");
                });

            modelBuilder.Entity("RevisionBlazer.Models.EntityFramework.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
